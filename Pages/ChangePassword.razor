@page "/change-password"
@using System.Security.Claims
@inject HttpClient HttpClient

<h3>Change Password</h3>

@if (success)
{
    <p>Your password was updated successfully.</p>
}
else if (!success && attempted)
{
    <p>There was an error updating your password. Please try again.</p>
}
else
{
    <p>Enter your current password and your new password.</p>
}

@if (!success)
{
    <EditForm Model="@changePasswordModel" OnValidSubmit="@ChangePasswordAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="currentPassword">Current Password</label>
            <InputText type="password" id="currentPassword" class="form-control" @bind-Value="changePasswordModel!.CurrentPassword" />
        </div>

        <div class="form-group">
            <label for="newPassword">New Password</label>
            <InputText type="password" id="newPassword" class="form-control" @bind-Value="changePasswordModel.NewPassword" />
        </div>

        <div class="form-group">
            <label for="confirmNewPassword">Confirm New Password</label>
            <InputText type="password" id="confirmNewPassword" class="form-control" @bind-Value="changePasswordModel.ConfirmNewPassword" />
        </div>

        <hr />

        <button type="submit" class="btn btn-primary">Change Password</button>
    </EditForm>
}

@code {
    private ChangePwdDTO changePasswordModel = new();
    // private CustomUserClaims? UserClaims = null;
    private bool success = false;
    private bool attempted = false;

    protected override void OnInitialized()
    {
        // UserClaims = DecryptJwtService.DecryptToken(Constants.JwtToken);
        // changePasswordModel = new() { Email = UserClaims.Email };
    }

    private async Task ChangePasswordAsync()
    {
        // RegistrationResponse result;
        // result = await Account.ChangePassword(changePasswordModel!);
        // if (!result.Flag)
        // {
        //     await JS.InvokeVoidAsync("alert", result.Message);
        //     changePasswordModel!.CurrentPassword = string.Empty;
        //     changePasswordModel!.NewPassword = string.Empty;
        //     changePasswordModel!.ConfirmNewPassword = string.Empty;
        //     return;
        // }
        // _ = result.Flag ? success = true : attempted = true;
    }
}